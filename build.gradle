ext.versionFile = file('version.properties')

task loaVersion{
	project.version = readVersion()
}

ProjectVersion readVersion(){
	logger.quiet 'Reading the version file.'
	
	if(!versionFile.exists()){
		throw new GradleException("Required version file does not exist $versionFile.canonicalPath")
	}
	
	Properties versionProps = new Properties()
	
	versionFile.withInputStream{ 
		stream -> versionProps.load(stream)
	}
	new ProjectVersion(versionProps.major.toInteger(), versionProps.minor.toInteger(), versionProps.release.toBoolean())
}

task printVersion{
	group = 'versioning'
	description = 'Prints version of the project'
	doLast{
		println "$version"
	}
}

task makeReleaseVersion(group: 'versioning', description: 'Makes project a release version'){
	inputs.property('release', version.release)
	outputs.file versionFile
	
	doLast{
		version.release = true
		ant.propertyfile(file: versionFile)
		{
			entry(key: 'release', type: 'string', operation: '=', value: 'true')
		}
	}
}

allprojects{
	group = 'com.prudent.crm'
}

subprojects{
	apply plugin: 'java'
}

 class ProjectVersion {
    Integer major
    Integer minor
    Boolean release

    ProjectVersion(Integer major, Integer minor) {
        this.major = major
        this.minor = minor
        this.release = Boolean.FALSE
    }

    ProjectVersion(Integer major, Integer minor, Boolean release) {
        this(major, minor)
        this.release = release
    }

    @Override
    String toString() {
        "$major.$minor${release ? '-RELEASE' : '-SNAPSHOT'}"
    }
}