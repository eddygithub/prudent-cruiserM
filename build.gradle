buildscript{
	ext{ springBootVersion='1.2.1.RELEASE'}
	repositories{
		jcenter()
		mavenLocal()
		mavenCentral()
		maven{url "http://repo.spring.io/gemstone-release-cache/"}
		maven{url "http://repo.spring.io/simple/ext-release-local/"}
	}
	dependencies {classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")}
}

allprojects{
  apply plugin: 'base'
  apply plugin: 'java'
  apply plugin: 'maven'

  repositories{
	  jcenter()
	  mavenLocal()
	  mavenCentral()
	  maven{url "http://repo.spring.io/gemstone-release-cache/"}
	  maven{url "http://repo.spring.io/simple/ext-release-local/"}
  }

}

subprojects{
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'eclipse-wtp'
apply plugin: 'spring-boot'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories{
	jcenter()
	mavenLocal()
	mavenCentral()
}

dependencies {
	testCompile("org.springframework.boot:spring-boot-starter-test")
}

task wrapper(type:Wrapper) {gradleVersion='1.12'}
/**
 * deployment upload archive from maven plugin to remote/local repository
 */
uploadArchives{
	repositories{
		mavenDeployer{
			repository(url: "file:///tmp/myRepo/")
			pom.groupId='com.prudent.crm'
			pom.version='1.0'
			pom.artifactId='cruiserM'
		}
	}
}

install{
	repositories{
		mavenInstaller{
			pom.groupId='com.prudent.crm'
			pom.version='1.0'
			pom.artifactId='cruiserM'
		}
	}
}
}

project('cruiser-ui') {
dependencies {
	compile project(':cruiser-persistence')
}
}

task buildPackage << {
println "We are packaging with version=$version"
}

task release(dependsOn: buildPackage){
println "Release now"
}

gradle.taskGraph.whenReady{
taskGraph ->
if(taskGraph.hasTask(release)){
	version = '1.0'
}
else{
	version = '1.0-SNAPSHOT'
}
}